name: Daily Transaction Sync

on:
  schedule:
    # Run daily at 6 AM UTC (2 AM ET / 11 PM PT)
    - cron: '0 6 * * *'
  workflow_dispatch: # Allows manual trigger from GitHub Actions tab

jobs:
  sync-transactions:
    runs-on: ubuntu-latest
    steps:
      - name: Sync Plaid Transactions
        run: |
          # Try custom domain first, fallback to pages.dev if DNS fails
          urls=(
            "https://401k.mreedon.com/api/sync/transactions"
            "https://401k-tracker.pages.dev/api/sync/transactions"
          )

          for url in "${urls[@]}"; do
            echo "Trying URL: $url"
            max_attempts=2
            attempt=1

            while [ $attempt -le $max_attempts ]; do
              echo "  Attempt $attempt of $max_attempts..."

              # Run curl and capture both output and exit code
              set +e  # Don't exit on error
              response=$(curl -X POST "$url" \
                -H "X-401K-Token: ${{ secrets.API_SHARED_TOKEN }}" \
                -H "Content-Type: application/json" \
                -w "\n%{http_code}" \
                --connect-timeout 10 \
                --max-time 60 \
                2>&1)  # Capture stderr too
              curl_exit=$?
              set -e  # Re-enable exit on error

              if [ $curl_exit -eq 0 ]; then
                http_code=$(echo "$response" | tail -n1)
                body=$(echo "$response" | sed '$d')

                echo "  HTTP Response code: $http_code"
                echo "  Response body: $body"

                if [ "$http_code" -eq 200 ]; then
                  echo "‚úÖ Sync successful via $url"
                  exit 0
                else
                  echo "  ‚ö†Ô∏è HTTP error: $http_code"
                fi
              else
                echo "  ‚ö†Ô∏è Curl failed with exit code $curl_exit"
                if [ $curl_exit -eq 6 ]; then
                  echo "  DNS resolution failed, trying next URL..."
                  break  # Skip to next URL
                fi
              fi

              if [ $attempt -lt $max_attempts ]; then
                echo "  Waiting 2s before retry..."
                sleep 2
              fi

              attempt=$((attempt + 1))
            done
          done

          echo "‚ùå All URLs and retry attempts failed"
          exit 1

      - name: Send Transaction Email
        if: success()  # Only run if sync succeeded
        run: |
          echo "üìß Sending transaction summary email..."

          response=$(curl -s -w "\n%{http_code}" -X POST \
            https://401k.mreedon.com/api/emails/send-transaction-summary \
            -H "X-401K-Token: ${{ secrets.API_SHARED_TOKEN }}" \
            -H "Content-Type: application/json")

          http_code=$(echo "$response" | tail -n1)
          body=$(echo "$response" | head -n-1)

          echo "Response: $body"
          echo "HTTP Status: $http_code"

          if [ "$http_code" -eq 200 ]; then
            echo "‚úÖ Transaction email sent successfully"
          else
            echo "‚ö†Ô∏è Email failed, but continuing (non-critical)"
            # Don't fail the workflow if email fails
          fi